{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","oldHeight","style","height","topInset","topPadder","StyleSheet","flatten","padding","paddingTop","variables","context","theme","platformStyle","layoutChange","e","nativeEvent","layout","androidStatusBarColor","statusBarColor","iosBarStyle","iosStatusbar","isIphoneX","_root","c","calculateHeight","calculatePadder","Component","contextTypes","PropTypes","object","propTypes","ViewPropTypes","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"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","file":"Header.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, StatusBar, ViewPropTypes, StyleSheet } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n  calculateHeight(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let oldHeight = null;\n    if (this.props.style.height != undefined) {\n      oldHeight = this.props.style.height;\n    } else if (this.props.style[1].height) {\n      oldHeight = this.props.style[1].height;\n    } else {\n      oldHeight = this.props.style[0].height;\n    }\n    let height = oldHeight + InsetValues.topInset;\n    return height;\n  }\n  calculatePadder(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let topPadder = null;\n    let style = StyleSheet.flatten(this.props.style);\n    if (style.padding !== undefined && style.paddingTop !== undefined) {\n      topPadder = (style.paddingTop ? style.paddingTop : style.padding) + InsetValues.topInset;\n    } else {\n      topPadder = InsetValues.topInset;\n    }\n    return topPadder;\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    return (\n      <View onLayout={e => this.layoutChange(e.nativeEvent.layout)}>\n        <StatusBar\n          backgroundColor={\n            this.props.androidStatusBarColor\n              ? this.props.androidStatusBarColor\n              : variables.statusBarColor\n          }\n          barStyle={\n            this.props.iosBarStyle\n              ? this.props.iosBarStyle\n              : platformStyle === \"material\"\n                ? \"light-content\"\n                : variables.iosStatusbar\n          }\n        />\n        {variable.isIphoneX ? (\n          <View\n            ref={c => (this._root = c)}\n            {...this.props}\n            style={[\n              this.props.style,\n              {\n                height: this.calculateHeight(\n                  this.state.orientation,\n                  variables.Inset\n                ),\n                paddingTop: this.calculatePadder(\n                  this.state.orientation,\n                  variables.Inset\n                )\n              }\n            ]}\n          />\n        ) : (\n          <View ref={c => (this._root = c)} {...this.props} />\n        )}\n      </View>\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool\n};\n\nconst StyledHeader = connectStyle(\n  \"NativeBase.Header\",\n  {},\n  mapPropsToStyleNames\n)(Header);\nexport { StyledHeader as Header };"]}
{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","leftPadder","style","padding","paddingLeft","leftInset","rightPadder","paddingRight","rightInset","variables","context","theme","isIphoneX","disableKBDismissScroll","x","y","keyboardShouldPersistTaps","_scrollview","c","_root","layoutChange","e","nativeEvent","layout","calculateLeft","padder","contentPadding","contentContainerStyle","children","Component","contextTypes","PropTypes","object","propTypes","oneOfType","number","array","bool","enableResetScrollToCoords","string","StyledContent","mapPropsToStyleNames"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"../theme/variables/platform\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n\n  calculateLeft(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let leftPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingLeft !== undefined\n      ) {\n        leftPadder =\n          (this.props.style[1].paddingLeft\n            ? this.props.style[1].paddingLeft\n            : this.props.style[1].padding) + InsetValues.leftInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingLeft !== undefined\n    ) {\n      leftPadder =\n        (this.props.style.paddingLeft\n          ? this.props.style.paddingLeft\n          : this.props.style.padding) + InsetValues.leftInset;\n    } else {\n      leftPadder = InsetValues.leftInset;\n    }\n    return leftPadder;\n  }\n  calculateRight(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let rightPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingRight !== undefined\n      ) {\n        rightPadder =\n          (this.props.style[1].paddingRight\n            ? this.props.style[1].paddingRight\n            : this.props.style[1].padding) + InsetValues.rightInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingRight !== undefined\n    ) {\n      rightPadder =\n        (this.props.style.paddingRight\n          ? this.props.style.paddingRight\n          : this.props.style.padding) + InsetValues.rightInset;\n    } else {\n      rightPadder = InsetValues.rightInset;\n    }\n    return rightPadder;\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    return variable.isIphoneX ? (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n\t\t}}\n        {...this.props}\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\n        style={[\n          this.props.style,\n          {\n            paddingLeft: this.calculateLeft(\n              this.state.orientation,\n              variables.Inset\n            )\n          }\n\t\t]}\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n\t\t{...this.props}\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  padder: PropTypes.bool,\n  disableKBDismissScroll: PropTypes.bool,\n  enableResetScrollToCoords: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\n  \"NativeBase.Content\",\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };"]}